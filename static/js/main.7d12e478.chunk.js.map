{"version":3,"sources":["components/Banner/Banner.jsx","components/Table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Banner","className","id","Table","state","original","results","sortData","e","console","log","target","value","filteredArr","filter","query","cell","includes","setState","sortName","sortedArr","sort","a","b","nameA","name","first","toUpperCase","nameB","this","getUsers","axios","get","then","response","data","res","type","placeholder","onChange","class","scope","onClick","map","element","src","picture","thumbnail","last","email","dob","age","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMA4BeA,G,MAzBA,WACb,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,cAAd,oCAGJ,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAU,cAAb,qGAQR,qBAAKC,GAAG,kB,iDC0ECC,E,4MA7FbC,MAAQ,CACNC,SAAU,GACVC,QAAS,I,EAcXC,SAAW,SAACC,GACVC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,IAAIC,EAAc,EAAKT,MAAMC,SAASS,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,SAAST,EAAEG,OAAOC,UACnF,EAAKM,SAAS,CAACZ,QAASO,K,EAG5BM,SAAW,SAACX,GACX,IAAIY,EAAY,EAAKhB,MAAMC,SAASgB,MAAK,SAASC,EAAEC,GAClD,IAAIC,EAAQF,EAAEG,KAAKC,MAAMC,cACrBC,EAAQL,EAAEE,KAAKC,MAAMC,cAEzB,OAAIH,EAAQI,GACH,EAENJ,EAAQI,EACH,EAIF,KAGR,EAAKV,SAAS,CAACZ,QAASc,K,kEAhCrBS,KAAKC,a,iCAGK,IAAD,OACTC,IACGC,IAAI,yCACJC,MAAK,SAACC,GAAD,OAAc,EAAKhB,SAAS,CAAEZ,QAAS4B,EAASC,KAAK7B,aAC1D2B,MAAK,SAACG,GAAD,OAAS,EAAKlB,SAAS,CAACb,SAAU,EAAKD,MAAME,e,+BA8BrD,OACE,qCACE,gCACE,uBACA,qBAAKL,UAAU,cAAf,SACE,+BACE,uBAAOoC,KAAK,OAAOC,YAAY,mBAAmBC,SAAUV,KAAKtB,eAGrE,0BAEF,qBAAKN,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,8BACE,wBAAOuC,MAAM,QAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMC,QAASb,KAAKV,SAA9B,kBACA,oBAAIsB,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCACGZ,KAAKzB,MAAME,QAAQqC,KAAI,SAACC,GAAD,OACtB,+BACE,oBAAIH,MAAM,MAAV,SACE,qBAAKI,IAAKD,EAAQE,QAAQC,cAE5B,+BACGH,EAAQnB,KAAKC,MADhB,IACwBkB,EAAQnB,KAAKuB,QAErC,6BAAKJ,EAAQ5B,OACb,6BAAK4B,EAAQK,QACb,6BAAKL,EAAQM,IAAIC,gC,GAhFrBC,aCSLC,MATf,WACE,OACE,sBAAKpD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d12e478.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Banner.css\";\n\nconst Banner = () => {\n  return (\n    <>\n      <div className=\"theBackground\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <h1 className=\"text-center\">Employee Directory</h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <p className=\"text-center\">\n                Click on name to sort by first name or use the search box to\n                filter by number.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"emptyDiv\"></div>\n    </>\n  );\n};\n\nexport default Banner;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\n\nclass Table extends Component {\n  state = {\n    original: [],\n    results: []\n  };\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    axios\n      .get(\"https://randomuser.me/api/?results=50\")\n      .then((response) => this.setState({ results: response.data.results }))\n      .then((res) => this.setState({original: this.state.results}));\n  }\n\n  sortData = (e) => {\n    console.log(e.target.value);\n    let filteredArr = this.state.original.filter(query => query.cell.includes(e.target.value) )\n    this.setState({results: filteredArr})\n  }\n\nsortName = (e) => {\n let sortedArr = this.state.original.sort(function(a,b){\n   let nameA = a.name.first.toUpperCase();\n   let nameB = b.name.first.toUpperCase();\n\n   if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n\n  // names must be equal\n  return 0;\n })\n\n this.setState({results: sortedArr})\n}\n\n\n  render() {\n    return (\n      <>\n        <div>\n          <br />\n          <div className=\"text-center\">\n            <form>\n              <input type=\"text\" placeholder=\"Search by Number\" onChange={this.sortData}/>\n            </form>\n          </div>\n          <br />\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div>\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Image</th>\n                      <th scope=\"col\" onClick={this.sortName}>Name</th>\n                      <th scope=\"col\">Phone</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Age</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.results.map((element) => (\n                      <tr>\n                        <th scope=\"row\">\n                          <img src={element.picture.thumbnail}></img>\n                        </th>\n                        <td>\n                          {element.name.first} {element.name.last}\n                        </td>\n                        <td>{element.cell}</td>\n                        <td>{element.email}</td>\n                        <td>{element.dob.age}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Table;\n","import Banner from \"./components/Banner/Banner\";\nimport Table from \"./components/Table/Table\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Banner />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}